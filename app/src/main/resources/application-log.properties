#All the supported logging systems can have the logger levels set in the Spring Environment
#(so for example in application.properties) using \uFFFD\uFFFDlogging.level.*=LEVEL\uFFFD\uFFFD where \uFFFD\uFFFDLEVEL\uFFFD\uFFFD is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF.
#The root logger can be configured using logging.level.root. Example application.properties:
#logging.level.root=WARN
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR
#By default Spring Boot remaps Thymeleaf INFO messages so that they are logged at DEBUG level.
#This helps to reduce noise in the standard log output. See LevelRemappingAppender for details of how you can apply remapping in your own configuration.
#java -jar myapp.jar --debug \uFFFD\uFFFD\u036C\uFFFD\uFFFDyou can also specify debug=true in your application.properties
#debug=true
logging.level.root=info
logging.level.org.springframework=info
logging.level.com.tangcheng.app.dao.repository.mapper=TRACE
logging.level.org.springframework.security=trace
#log
logging.config=classpath:logback-spring-local.xml